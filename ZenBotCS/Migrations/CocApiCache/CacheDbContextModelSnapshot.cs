// <auto-generated />
using System;
using CocApi.Cache;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ZenBotCS.Migrations.CocApiCache
{
    [DbContext(typeof(CacheDbContext))]
    partial class CacheDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CocApi.Cache.Context.CachedClan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Download")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DownloadMembers")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DownloadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsWarLogPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("KeepUntil")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RawContent")
                        .HasColumnType("longtext");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("KeepUntil");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("clan", (string)null);
                });

            modelBuilder.Entity("CocApi.Cache.Context.CachedPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClanTag")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Download")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DownloadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("KeepUntil")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RawContent")
                        .HasColumnType("longtext");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClanTag");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("KeepUntil");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("player", (string)null);
                });

            modelBuilder.Entity("CocApi.Cache.Context.CachedWar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Announcements")
                        .HasColumnType("int");

                    b.Property<string>("ClanTag")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Download")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DownloadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("KeepUntil")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OpponentTag")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("PreparationStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RawContent")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Season")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WarTag")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClanTag");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("IsFinal");

                    b.HasIndex("KeepUntil");

                    b.HasIndex("OpponentTag");

                    b.HasIndex("Season");

                    b.HasIndex("WarTag");

                    b.HasIndex("PreparationStartTime", "ClanTag", "OpponentTag")
                        .IsUnique();

                    b.ToTable("war", (string)null);
                });

            modelBuilder.Entity("CocApi.Cache.Context.CachedClan", b =>
                {
                    b.OwnsOne("CocApi.Cache.Context.CachedClanWar", "CurrentWar", b1 =>
                        {
                            b1.Property<int>("CachedClanId")
                                .HasColumnType("int");

                            b1.Property<bool>("Added")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("Download")
                                .HasColumnType("tinyint(1)");

                            b1.Property<DateTime?>("DownloadedAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("EnemyTag")
                                .HasColumnType("varchar(255)");

                            b1.Property<DateTime?>("ExpiresAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("KeepUntil")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("PreparationStartTime")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("RawContent")
                                .HasColumnType("longtext");

                            b1.Property<int?>("State")
                                .HasColumnType("int");

                            b1.Property<int?>("StatusCode")
                                .HasColumnType("int");

                            b1.Property<int?>("Type")
                                .HasColumnType("int");

                            b1.HasKey("CachedClanId");

                            b1.HasIndex("EnemyTag");

                            b1.HasIndex("ExpiresAt");

                            b1.HasIndex("KeepUntil");

                            b1.HasIndex("CachedClanId", "Download");

                            b1.HasIndex("Added", "CachedClanId", "State");

                            b1.ToTable("current_war", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CachedClanId");
                        });

                    b.OwnsOne("CocApi.Cache.Context.CachedClanWarLeagueGroup", "Group", b1 =>
                        {
                            b1.Property<int>("CachedClanId")
                                .HasColumnType("int");

                            b1.Property<bool>("Added")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("Download")
                                .HasColumnType("tinyint(1)");

                            b1.Property<DateTime?>("DownloadedAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("ExpiresAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("KeepUntil")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("RawContent")
                                .HasColumnType("longtext");

                            b1.Property<DateTime?>("Season")
                                .HasColumnType("datetime(6)");

                            b1.Property<int?>("State")
                                .HasColumnType("int");

                            b1.Property<int?>("StatusCode")
                                .HasColumnType("int");

                            b1.HasKey("CachedClanId");

                            b1.HasIndex("ExpiresAt");

                            b1.HasIndex("KeepUntil");

                            b1.ToTable("group", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CachedClanId");
                        });

                    b.OwnsOne("CocApi.Cache.Context.CachedClanWarLog", "WarLog", b1 =>
                        {
                            b1.Property<int>("CachedClanId")
                                .HasColumnType("int");

                            b1.Property<bool>("Download")
                                .HasColumnType("tinyint(1)");

                            b1.Property<DateTime?>("DownloadedAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("ExpiresAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("KeepUntil")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("RawContent")
                                .HasColumnType("longtext");

                            b1.Property<int?>("StatusCode")
                                .HasColumnType("int");

                            b1.HasKey("CachedClanId");

                            b1.HasIndex("ExpiresAt");

                            b1.HasIndex("KeepUntil");

                            b1.ToTable("war_log", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CachedClanId");
                        });

                    b.Navigation("CurrentWar")
                        .IsRequired();

                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("WarLog")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
